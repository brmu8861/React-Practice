{"ast":null,"code":"import _slicedToArray from \"/Users/Bridget/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/Bridget/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Bridget/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Bridget/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Bridget/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Bridget/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Bridget/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n/*class Square extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tvalue: null,\n\t\t};\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<button className=\"square\" onClick={() => \n\t\t\tthis.props.onClick()}\n\t\t\t>\n\t\t\t{this.props.value}\n\t\t\t</button>\n\t\t);\n\t}\n}*/\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.value);\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n    return _this;\n  }\n  /*handleClick(i){\n  \tconst squares = this.state.squares.slice();\n  \tif(calculateWinner(squares) || squares[i]){\n  \t\treturn;\n  \t}\n  \tsquares[i] = this.state.xIsNext ? 'X' : 'O';\n  \tthis.setState({\n  \t\tsquares: squares,\n  \t\txIsNext: !this.state.xIsNext,\n  \t});\n  }*/\n\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this2 = this;\n\n      return React.createElement(Square, {\n        value: this.props.squares[i],\n        onClick: function onClick() {\n          return _this2.props.onClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      /*const winner = calculateWinner(this.state.squares);\n      let status;\n      if(winner){\n      \tstatus = 'Winner: ' + winner;\n      }else{\n      \tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }*/\n      //}\n      //const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game(props) {\n    var _this3;\n\n    _classCallCheck(this, Game);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this3.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n    return _this3;\n  }\n\n  _createClass(Game, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var history = this.state.history;\n      var current = history[history.length - 1];\n      var squares = current.squares.slice();\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat([{\n          squares: squares\n        }]),\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var history = this.state.history;\n      var current = history[history.length - 1];\n      var winner = calculateWinner(current.squares);\n      var moves = history.map(function (step, move) {\n        var desc = move ? 'Go to move #' + move : 'Go to game start';\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this4.jumpTo(move);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, desc));\n      });\n      var status;\n\n      if (winner) {\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Board, {\n        squares: current.squares,\n        onClick: function onClick(i) {\n          return _this4.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, status), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, moves)));\n    }\n  }]);\n\n  return Game;\n}(React.Component); // ===============================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 163\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] == squares[b] && squares[a] == squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/Bridget/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","state","squares","Array","fill","xIsNext","i","renderSquare","Component","Game","history","current","length","slice","calculateWinner","setState","concat","winner","moves","map","step","move","desc","jumpTo","status","handleClick","render","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\n\n/*class Square extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tvalue: null,\n\t\t};\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<button className=\"square\" onClick={() => \n\t\t\tthis.props.onClick()}\n\t\t\t>\n\t\t\t{this.props.value}\n\t\t\t</button>\n\t\t);\n\t}\n}*/\n\nfunction Square(props){\n\treturn(\n\t\t<button className=\"square\" onClick={props.onClick}>\n\t\t{props.value}\n\t\t</button>\n\t);\n}\n\nclass Board extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsquares: Array(9).fill(null),\n\t\t\txIsNext: true,\n\t\t};\n\t}\n\n\t/*handleClick(i){\n\t\tconst squares = this.state.squares.slice();\n\t\tif(calculateWinner(squares) || squares[i]){\n\t\t\treturn;\n\t\t}\n\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\n\t\tthis.setState({\n\t\t\tsquares: squares,\n\t\t\txIsNext: !this.state.xIsNext,\n\t\t});\n\t}*/\n\trenderSquare(i) {\n\t\treturn( \n\t\t\t<Square\n\t\t\t\tvalue={this.props.squares[i]} \n\t\t\t\tonClick={() => this.props.onClick(i)}\n\t\t \t/>\n\t\t);\n\t}\n\trender(){\n\t\t/*const winner = calculateWinner(this.state.squares);\n\t\tlet status;\n\t\tif(winner){\n\t\t\tstatus = 'Winner: ' + winner;\n\t\t}else{\n\t\t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\t\t}*/\n\t\t//}\n\t\t//const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t{this.renderSquare(1)}\n\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(3)}\n\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t{this.renderSquare(5)}\n\t\t\t\t</div>\n\t\t\t\t<div className =\"board-row\">\n\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t{this.renderSquare(7)}\n\t\t\t\t\t{this.renderSquare(8)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Game extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [{\n\t\t\t\tsquares: Array(9).fill(null),\n\t\t\t}],\n\t\t\txIsNext: true,\n\t\t};\n\t}\n\n\n\thandleClick(i){\n\t\tconst history = this.state.history;\n\t\tconst current = history[history.length - 1];\n\t\tconst squares = current.squares.slice();\n\t\tif(calculateWinner(squares) || squares[i]){\n\t\t\treturn;\n\t\t}\n\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\n\t\tthis.setState({\n\t\t\thistory: history.concat([{\n\t\t\t\tsquares: squares,\n\t\t\t}]),\n\t\t\txIsNext: !this.state.xIsNext,\n\t\t});\n\t}\n\n\trender(){\n\t\tconst history = this.state.history;\n\t\tconst current = history[history.length - 1];\n\t\tconst winner = calculateWinner(current.squares);\n\n\t\tconst moves = history.map((step, move) => {\n\t\t\tconst desc = move ?\n\t\t\t\t'Go to move #' + move :\n\t\t\t\t'Go to game start';\n\t\t\treturn(\n\t\t\t\t<li>\n\t\t\t\t<button onClick={() => this.jumpTo(move)}>{desc}\n\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t\tlet status;\n\t\tif(winner){\n\t\t\tstatus = 'Winner: ' + winner;\n\t\t}else{\n\t\t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board \n\t\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\t\tonClick={(i) => this.handleClick(i)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t<div>{status}</div>\n\t\t\t\t\t<ol>{moves}</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// ===============================================\n\nReactDOM.render(\n\t<Game />,\n\tdocument.getElementById('root')\n);\n\nfunction calculateWinner(squares){\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t];\n\tfor(let i = 0; i < lines.length; i++){\n\t\tconst [a, b, c] = lines[i];\n\t\tif(squares[a] && squares[a] == squares[b] && squares[a] == squares[c]){\n\t\t\treturn squares[a];\n\t\t}\n\t}\n\treturn null;\n}"]},"metadata":{},"sourceType":"module"}